// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum RoleDb {
  USER
  ADMIN
}

model User {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?         @unique
  emailVerified DateTime?
  image         String?
  password      String?
  isTwoFactor   Boolean?        @default(false)
  role          RoleDb          @default(USER)
  accounts      Account[]
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
}

model VerifyEmailToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  token      String   @unique
  userId     String
  expiredAt  DateTime
  createdAt  DateTime @default(now())

  @@unique([userId])
}

model ResetPassword {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  token      String   @unique
  userId     String
  expiredAt  DateTime
  createdAt  DateTime @default(now())

  @@unique([userId])
}

model TwoFactorModel {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  token      String   @unique
  userId     String
  correctd   Boolean  @default(false)
  expiredAt  DateTime
  createdAt  DateTime @default(now())

  @@unique([userId])
}